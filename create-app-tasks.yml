---
- name: include the variables for this microservice      
  include_vars:
    file: microservice-vars.yml   
  
- include: service-envs-{{ project }}.yml 

- name: Create the microservices application from the source to image builder application
  shell: 'oc new-app redhat-openjdk18-openshift:1.2~{{ github }}/{{ repo }} --name={{ microservice }} {{ service_envs }}'
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  tags:
    - openshift         

- name: Wait for the microservice to become available
  shell : "oc rollout status dc/{{ microservice }}"
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  tags:
    - openshift   

- name: Set the readiness probe 
  shell: "oc set probe dc/{{ microservice }} --readiness --get-url=http://:8080/api --initial-delay-seconds=60"
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  tags:
    - openshift

- name: Configure the resource limits for this microservice
  shell: "oc set resources dc {{ microservice }} -c={{ microservice }} --limits=cpu={{ cpu_max }},memory={{ memory_max }} --requests=cpu={{ cpu_min }},memory={{ memory_min }}"
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  tags:
    - openshift     
    
- name: Wait for the microservice to become available
  shell : "oc rollout status dc/{{ microservice }}"
  register: command_result
  failed_when: "'exists' not in command_result.stderr and command_result.rc != 0"
  changed_when: "'exists' not in command_result.stderr"
  tags:
    - openshift   